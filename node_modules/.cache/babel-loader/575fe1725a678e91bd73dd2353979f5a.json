{"ast":null,"code":"var _jsxFileName = \"/Users/Vishal/Desktop/dentira/src/Component/Item.js\";\nimport React, { Component } from \"react\";\nimport \"./index.css\";\nimport NodeItem from './NodeItem';\nexport default class Node extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      isExpanded: false,\n      tree: this.props.tree,\n      clickedNode: false\n    };\n\n    this.splitId = combinedId => combinedId.match(/.{3}/g);\n\n    this.toggleExpansion = combinedId => {\n      const tree = this.props.tree;\n      const nodeIds = combinedId.match(/.{3}/g);\n\n      const searchNodeIndex = (children, id) => {\n        return children.findIndex(item => item.id === id);\n      };\n\n      const modifyNode = (root, level) => {\n        let si = searchNodeIndex(root, nodeIds[level]);\n\n        if (level === nodeIds.length - 1) {\n          root[si].isExpanded = !root[si].isExpanded;\n          return root;\n        }\n\n        return modifyNode(root[si].children, level + 1);\n      };\n\n      modifyNode(tree, 0);\n      this.setState({\n        tree\n      });\n    };\n\n    this.renderTree = (root, combinedId) => {\n      const ids = this.splitId(combinedId) || [];\n      return root.map(node => React.createElement(\"div\", {\n        key: node.id,\n        style: {\n          marginLeft: 30\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40\n        },\n        __self: this\n      }, React.createElement(NodeItem, {\n        level: ids.length - 1,\n        node: node,\n        marginLeft: ids.length ? 30 : 0,\n        toggleExpansion: () => this.toggleExpansion(combinedId + node.id),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41\n        },\n        __self: this\n      }), node.isExpanded && this.renderTree(node.children, combinedId + node.id)));\n    };\n  }\n\n  render() {\n    const tree = this.props.tree;\n    console.log(tree.length);\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }, tree.length > 0 && React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }, this.renderTree(tree, \"\")), \"}\");\n  }\n\n} // const NodeItem = props => {\n//     const { node, toggleExpansion, level } = props;\n//     const icon = node.isExpanded ? caretDown : caretRight;\n//     const style = node.isExpanded ? { marginRight: 13 } : null;\n//     const textStyle = node.children.length > 0 ? null : { marginLeft: \"28px\" };\n//     // const popUp=(node)=>{\n//     //     this.setState({\n//     //         clickedNode : true\n//     //     })\n//     // }\n//     return (\n//         <div className=\"node\">\n//             {level > 0 && <span>|</span>}\n//             {node.children.length > 0 && (\n//                 <img\n//                     hand\n//                     onClick={toggleExpansion}\n//                     style={style}\n//                     className=\"caret\"\n//                     src={icon}\n//                     alt=\"caret\"\n//                     height={14}\n//                 ></img>\n//             )}\n//             <span style={textStyle} className=\"mx-10\">\n//                 {node.title}\n//             </span>\n//         </div>\n//     );\n// };","map":{"version":3,"sources":["/Users/Vishal/Desktop/dentira/src/Component/Item.js"],"names":["React","Component","NodeItem","Node","state","isExpanded","tree","props","clickedNode","splitId","combinedId","match","toggleExpansion","nodeIds","searchNodeIndex","children","id","findIndex","item","modifyNode","root","level","si","length","setState","renderTree","ids","map","node","marginLeft","render","console","log"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\n\n\nimport \"./index.css\";\nimport NodeItem from './NodeItem';\n\n\nexport default class Node extends Component {\n    state = {\n        isExpanded: false,\n        tree: this.props.tree,\n        clickedNode : false\n    };\n\n    splitId = combinedId => combinedId.match(/.{3}/g);\n\n    toggleExpansion = combinedId => {\n        const { tree } = this.props;\n        const nodeIds = combinedId.match(/.{3}/g);\n        const searchNodeIndex = (children, id) => {\n            return children.findIndex(item => item.id === id);\n        };\n\n        const modifyNode = (root, level) => {\n            let si = searchNodeIndex(root, nodeIds[level]);\n            if (level === nodeIds.length - 1) {\n                root[si].isExpanded = !root[si].isExpanded;\n                return root;\n            }\n            return modifyNode(root[si].children, level + 1);\n        };\n\n        modifyNode(tree, 0);\n        this.setState({ tree });\n    };\n\n    renderTree = (root, combinedId) => {\n        const ids = this.splitId(combinedId) || [];\n        return root.map(node => (\n            <div key={node.id} style={{ marginLeft: 30 }}>\n                <NodeItem\n                    level={ids.length - 1}\n                    node={node}\n                    marginLeft={ids.length ? 30 : 0}\n                    toggleExpansion={() => this.toggleExpansion(combinedId + node.id)}\n                />\n                {node.isExpanded && this.renderTree(node.children, combinedId + node.id)}\n            </div>\n        ));\n    };\n\n    \n\n    render() {\n        const { tree } = this.props;\n        console.log(tree.length);\n        return (\n        <div>\n            {tree.length > 0 && <div>{this.renderTree(tree, \"\")}</div>}}\n        </div> \n        \n        );\n    }\n}\n\n// const NodeItem = props => {\n//     const { node, toggleExpansion, level } = props;\n//     const icon = node.isExpanded ? caretDown : caretRight;\n//     const style = node.isExpanded ? { marginRight: 13 } : null;\n//     const textStyle = node.children.length > 0 ? null : { marginLeft: \"28px\" };\n//     // const popUp=(node)=>{\n//     //     this.setState({\n//     //         clickedNode : true\n//     //     })\n//     // }\n//     return (\n//         <div className=\"node\">\n//             {level > 0 && <span>|</span>}\n//             {node.children.length > 0 && (\n//                 <img\n//                     hand\n//                     onClick={toggleExpansion}\n//                     style={style}\n//                     className=\"caret\"\n//                     src={icon}\n//                     alt=\"caret\"\n//                     height={14}\n//                 ></img>\n//             )}\n//             <span style={textStyle} className=\"mx-10\">\n//                 {node.title}\n//             </span>\n//         </div>\n//     );\n// };\n"]},"metadata":{},"sourceType":"module"}