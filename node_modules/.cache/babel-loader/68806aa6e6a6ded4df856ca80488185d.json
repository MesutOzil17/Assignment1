{"ast":null,"code":"var _jsxFileName = \"/Users/Vishal/Desktop/dentira/src/Component/Item.js\";\nimport React, { Component } from \"react\";\nimport caretRight from \"../assets/images/caret-right.jpg\";\nimport caretDown from \"../assets/images/caret-down.png\";\nimport \"./index.css\";\nexport default class Node extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      isExpanded: false,\n      tree: this.props.tree\n    };\n\n    this.splitId = combinedId => combinedId.match(/.{3}/g);\n\n    this.toggleExpansion = combinedId => {\n      const tree = this.props.tree;\n      const nodeIds = combinedId.match(/.{3}/g);\n\n      const searchNodeIndex = (children, id) => {\n        return children.findIndex(item => item.id === id);\n      };\n\n      const modifyNode = (root, level) => {\n        let si = searchNodeIndex(root, nodeIds[level]);\n\n        if (level === nodeIds.length - 1) {\n          root[si].isExpanded = !root[si].isExpanded;\n          return root;\n        }\n\n        return modifyNode(root[si].children, level + 1);\n      };\n\n      modifyNode(tree, 0);\n      this.setState({\n        tree\n      });\n    };\n\n    this.renderTree = (root, combinedId) => {\n      const ids = this.splitId(combinedId) || [];\n      return root.map(node => React.createElement(\"div\", {\n        key: node.id,\n        style: {\n          marginLeft: 30\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38\n        },\n        __self: this\n      }, React.createElement(NodeItem, {\n        level: ids.length - 1,\n        node: node,\n        marginLeft: ids.length ? 30 : 0,\n        toggleExpansion: () => this.toggleExpansion(combinedId + node.id),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39\n        },\n        __self: this\n      }), node.isExpanded && this.renderTree(node.children, combinedId + node.id)));\n    };\n  }\n\n  render() {\n    const tree = this.props.tree;\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }, this.renderTree(tree, \"\"));\n  }\n\n}\n\nconst NodeItem = props => {\n  const node = props.node,\n        toggleExpansion = props.toggleExpansion,\n        level = props.level;\n  const icon = node.isExpanded ? caretDown : caretRight;\n  const style = node.isExpanded ? {\n    marginRight: 13\n  } : null;\n  const textStyle = node.children.length > 0 ? null : {\n    marginLeft: \"28px\"\n  };\n\n  const addNode = node => {\n    return React.createElement(\"div\", {\n      className: \"card\",\n      style: \"width: 18rem;\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"card-body\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }, React.createElement(\"h5\", {\n      class: \"card-title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }, \"Card title\"), React.createElement(\"h6\", {\n      class: \"card-subtitle mb-2 text-muted\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }, \"Card subtitle\"), React.createElement(\"p\", {\n      class: \"card-text\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }, \"Some quick example text to build on the card title and make up the bulk of the card's content.\")));\n  };\n\n  return React.createElement(\"div\", {\n    className: \"node\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78\n    },\n    __self: this\n  }, level > 0 && React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79\n    },\n    __self: this\n  }, \"|\"), node.children.length > 0 && React.createElement(\"img\", {\n    hand: true,\n    onClick: toggleExpansion,\n    style: style,\n    className: \"caret\",\n    src: icon,\n    alt: \"caret\",\n    height: 14,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81\n    },\n    __self: this\n  }), React.createElement(\"span\", {\n    style: textStyle,\n    className: \"mx-10\",\n    onClick: () => addNode(node),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91\n    },\n    __self: this\n  }, node.title));\n};","map":{"version":3,"sources":["/Users/Vishal/Desktop/dentira/src/Component/Item.js"],"names":["React","Component","caretRight","caretDown","Node","state","isExpanded","tree","props","splitId","combinedId","match","toggleExpansion","nodeIds","searchNodeIndex","children","id","findIndex","item","modifyNode","root","level","si","length","setState","renderTree","ids","map","node","marginLeft","render","NodeItem","icon","style","marginRight","textStyle","addNode","title"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\n\nimport caretRight from \"../assets/images/caret-right.jpg\";\nimport caretDown from \"../assets/images/caret-down.png\";\nimport \"./index.css\";\n\nexport default class Node extends Component {\n    state = {\n        isExpanded: false,\n        tree: this.props.tree\n    };\n\n    splitId = combinedId => combinedId.match(/.{3}/g);\n\n    toggleExpansion = combinedId => {\n        const { tree } = this.props;\n        const nodeIds = combinedId.match(/.{3}/g);\n        const searchNodeIndex = (children, id) => {\n            return children.findIndex(item => item.id === id);\n        };\n\n        const modifyNode = (root, level) => {\n            let si = searchNodeIndex(root, nodeIds[level]);\n            if (level === nodeIds.length - 1) {\n                root[si].isExpanded = !root[si].isExpanded;\n                return root;\n            }\n            return modifyNode(root[si].children, level + 1);\n        };\n\n        modifyNode(tree, 0);\n        this.setState({ tree });\n    };\n\n    renderTree = (root, combinedId) => {\n        const ids = this.splitId(combinedId) || [];\n        return root.map(node => (\n            <div key={node.id} style={{ marginLeft: 30 }}>\n                <NodeItem\n                    level={ids.length - 1}\n                    node={node}\n                    marginLeft={ids.length ? 30 : 0}\n                    toggleExpansion={() => this.toggleExpansion(combinedId + node.id)}\n                />\n                {node.isExpanded && this.renderTree(node.children, combinedId + node.id)}\n            </div>\n        ));\n    };\n\n    \n\n    render() {\n        const { tree } = this.props;\n\n        return <div>{this.renderTree(tree, \"\")}</div>;\n    }\n}\n\nconst NodeItem = props => {\n    const { node, toggleExpansion, level } = props;\n    const icon = node.isExpanded ? caretDown : caretRight;\n    const style = node.isExpanded ? { marginRight: 13 } : null;\n    const textStyle = node.children.length > 0 ? null : { marginLeft: \"28px\" };\n    const addNode=(node)=>{\n        return (\n            <div className=\"card\" style=\"width: 18rem;\">\n                <div className=\"card-body\">\n                <h5 class=\"card-title\">Card title</h5>\n                <h6 class=\"card-subtitle mb-2 text-muted\">Card subtitle</h6>\n                <p class=\"card-text\">Some quick example text to build on the card title and make up the bulk of the card's content.</p>\n\n                </div>\n            </div>\n\n        )\n    }\n    return (\n        <div className=\"node\">\n            {level > 0 && <span>|</span>}\n            {node.children.length > 0 && (\n                <img\n                    hand\n                    onClick={toggleExpansion}\n                    style={style}\n                    className=\"caret\"\n                    src={icon}\n                    alt=\"caret\"\n                    height={14}\n                ></img>\n            )}\n            <span style={textStyle} className=\"mx-10\" onClick={()=>addNode(node)}>\n                {node.title}\n            </span>\n        </div>\n    );\n};\n"]},"metadata":{},"sourceType":"module"}