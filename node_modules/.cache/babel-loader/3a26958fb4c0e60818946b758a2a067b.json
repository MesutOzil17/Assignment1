{"ast":null,"code":"var _jsxFileName = \"/Users/Vishal/Desktop/dentira/src/App.js\";\nimport React from \"react\";\nimport \"./index.css\";\nimport Item from \"./Component/Item\";\nimport _ from \"lodash\";\nimport { connect } from \"react-redux\";\nimport { fetchTree } from './action/action'; // import Node from \"./Component/Node\";\n\nconst tree = [{\n  id: \"111\",\n  title: \"ABC\",\n  isExpanded: false,\n  children: [{\n    id: \"123\",\n    title: \"XYZ\",\n    isExpanded: false,\n    children: [{\n      id: \"456\",\n      title: \"123\",\n      isExpanded: false,\n      children: [{\n        title: \"456\",\n        isExpanded: false,\n        children: []\n      }, {\n        title: \"456\",\n        isExpanded: false,\n        children: []\n      }]\n    }, {\n      title: \"456\",\n      isExpanded: false,\n      children: []\n    }]\n  }, {\n    title: \"EFG\",\n    isExpanded: false,\n    children: []\n  }]\n}, {\n  title: \"DEF\",\n  isExpanded: false,\n  children: []\n}];\n\nclass App extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      node: \"\" // tree:''\n\n    };\n\n    this.componentDidMount = () => {\n      const getTree = this.props.getTree;\n      getTree(tree);\n    };\n\n    this.handleChange = e => {\n      this.setState({\n        node: e.target.value\n      });\n    };\n\n    this.add = () => {\n      const node = this.state.node;\n      const tree = this.props.tree;\n      const newNode = {\n        id: this.generateUniqueId(),\n        title: node,\n        isExpanded: false,\n        children: []\n      };\n\n      let newTree = _.cloneDeep(tree);\n\n      if (node.length) newTree.push(newNode);\n      this.setState({\n        tree: newTree,\n        node: \"\"\n      });\n    };\n\n    this.generateUniqueId = () => {\n      var result = \"\";\n      var characters = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789\";\n      var charactersLength = characters.length;\n\n      for (var i = 0; i < 3; i++) {\n        result += characters.charAt(Math.floor(Math.random() * charactersLength));\n      }\n\n      return result;\n    };\n  }\n\n  render() {\n    const node = this.state.node;\n    const tree = this.props.tree;\n    return React.createElement(\"div\", {\n      className: \"container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109\n      },\n      __self: this\n    }, React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110\n      },\n      __self: this\n    }, \"Your Custom Storage\"), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111\n      },\n      __self: this\n    }, \"You can max use 4 characters/number for each level's name\"), React.createElement(\"form\", {\n      className: \"form-inline my-2 my-lg-0\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"d-flex align-items-flex-start\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      className: \"form-control mr-sm-2\",\n      type: \"search\",\n      maxLength: 4,\n      placeholder: \"RM1\",\n      \"aria-label\": \"Search\",\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115\n      },\n      __self: this\n    }), React.createElement(\"small\", {\n      id: \"inputHelp\",\n      className: \"form-text text-muted\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123\n      },\n      __self: this\n    }, \"Add top level (example: R1,RM1)\")), React.createElement(\"button\", {\n      className: \"btn btn-success my-2 my-sm-0\",\n      type: \"submit\",\n      onClick: this.add,\n      disabled: node.length === 0,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127\n      },\n      __self: this\n    }, \"ADD\"))), React.createElement(Item, {\n      tree: tree,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137\n      },\n      __self: this\n    }));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  console.log(state);\n  return {\n    tree: state\n  };\n};\n\nconst mapDispatchToProps = dispatch => ({\n  getTree: tree => {\n    dispatch(fetchTree(tree));\n  }\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);","map":{"version":3,"sources":["/Users/Vishal/Desktop/dentira/src/App.js"],"names":["React","Item","_","connect","fetchTree","tree","id","title","isExpanded","children","App","Component","state","node","componentDidMount","getTree","props","handleChange","e","setState","target","value","add","newNode","generateUniqueId","newTree","cloneDeep","length","push","result","characters","charactersLength","i","charAt","Math","floor","random","render","mapStateToProps","console","log","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport \"./index.css\";\nimport Item from \"./Component/Item\";\nimport _ from \"lodash\";\nimport { connect } from \"react-redux\";\n\nimport {fetchTree} from './action/action';\n\n// import Node from \"./Component/Node\";\n\nconst tree = [\n    {\n        id: \"111\",\n        title: \"ABC\",\n        isExpanded: false,\n        children: [\n            {\n                id: \"123\",\n                title: \"XYZ\",\n                isExpanded: false,\n                children: [\n                    {\n                        id: \"456\",\n                        title: \"123\",\n                        isExpanded: false,\n                        children: [\n                            {\n                                title: \"456\",\n                                isExpanded: false,\n                                children: []\n                            },\n                            {\n                                title: \"456\",\n                                isExpanded: false,\n                                children: []\n                            }\n                        ]\n                    },\n                    {\n                        title: \"456\",\n                        isExpanded: false,\n                        children: []\n                    }\n                ]\n            },\n            {\n                title: \"EFG\",\n                isExpanded: false,\n                children: []\n            }\n        ]\n    },\n    {\n        title: \"DEF\",\n        isExpanded: false,\n        children: []\n    }\n];\n\nclass App extends React.Component {\n    state = {\n        node: \"\",\n        // tree:''\n    };\n\n    componentDidMount=()=>{\n        const {getTree} = this.props;\n        getTree(tree);\n    }\n\n    handleChange = e => {\n        this.setState({\n            node: e.target.value\n        });\n    };\n\n    add = () => {\n        const { node } = this.state;\n        const {tree} = this.props;\n\n        const newNode = {\n            id: this.generateUniqueId(),\n            title: node,\n            isExpanded: false,\n            children: []\n        };\n        let newTree = _.cloneDeep(tree);\n        if (node.length) newTree.push(newNode);\n        this.setState({\n            tree: newTree,\n            node: \"\"\n        });\n    };\n\n    generateUniqueId = () => {\n        var result = \"\";\n        var characters = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789\";\n        var charactersLength = characters.length;\n        for (var i = 0; i < 3; i++) {\n            result += characters.charAt(Math.floor(Math.random() * charactersLength));\n        }\n        return result;\n    };\n\n    render() {\n        const { node } = this.state;\n        const {tree} = this.props;\n        return (\n            <div className=\"container\">\n                <h3>Your Custom Storage</h3>\n                <p>You can max use 4 characters/number for each level's name</p>\n                <form className=\"form-inline my-2 my-lg-0\">\n                    <div className=\"d-flex align-items-flex-start\">\n                        <div>\n                            <input\n                                className=\"form-control mr-sm-2\"\n                                type=\"search\"\n                                maxLength={4}\n                                placeholder=\"RM1\"\n                                aria-label=\"Search\"\n                                onChange={this.handleChange}\n                            />\n                            <small id=\"inputHelp\" className=\"form-text text-muted\">\n                                Add top level (example: R1,RM1)\n                            </small>\n                        </div>\n                        <button\n                            className=\"btn btn-success my-2 my-sm-0\"\n                            type=\"submit\"\n                            onClick={this.add}\n                            disabled={node.length === 0}\n                        >\n                            ADD\n                        </button>\n                    </div>\n                </form>\n                <Item tree={tree} />\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = state => {\n    console.log(state);\n    return { tree: state };\n  };\n\nconst mapDispatchToProps = dispatch => ({\n    getTree: (tree) => {\n      dispatch(fetchTree(tree));\n    }\n  }); \n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n  )(App);\n"]},"metadata":{},"sourceType":"module"}