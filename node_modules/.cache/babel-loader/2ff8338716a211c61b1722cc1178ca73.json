{"ast":null,"code":"var _jsxFileName = \"/Users/Vishal/Desktop/dentira/src/Component/NodeItem.js\";\nimport React, { Component } from \"react\";\nimport Popover from \"react-bootstrap/Popover\";\nimport OverlayTrigger from \"react-bootstrap/OverlayTrigger\";\nimport CustomPopover from './CustomPopover';\nimport \"./index.css\";\nimport caretRight from \"../assets/images/caret-right.jpg\";\nimport caretDown from \"../assets/images/caret-down.png\";\n\nclass NodeItem extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      clickedNode: false\n    };\n\n    this.popUp = () => {\n      this.setState({\n        clickedNode: true\n      });\n    };\n  }\n\n  render() {\n    const _this$props = this.props,\n          node = _this$props.node,\n          toggleExpansion = _this$props.toggleExpansion,\n          level = _this$props.level,\n          addChild = _this$props.addChild,\n          edit = _this$props.edit;\n    const icon = node.isExpanded ? caretDown : caretRight;\n    const style = node.isExpanded ? {\n      marginRight: 13\n    } : null;\n    const textStyle = node.children.length > 0 ? null : {\n      marginLeft: \"28px\"\n    };\n    return React.createElement(\"div\", {\n      className: \"node\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26\n      },\n      __self: this\n    }, level > 0 && React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27\n      },\n      __self: this\n    }, \"|\"), node.children.length > 0 && React.createElement(\"img\", {\n      hand: true,\n      onClick: toggleExpansion,\n      style: style,\n      className: \"caret\",\n      src: icon,\n      alt: \"caret\",\n      height: 14,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29\n      },\n      __self: this\n    }), React.createElement(OverlayTrigger, {\n      trigger: \"click\",\n      placement: \"right\",\n      overlay: React.createElement(CustomPopover, {\n        node: node,\n        addChild: addChild,\n        edit: edit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39\n        },\n        __self: this\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      style: textStyle,\n      className: \"mx-10\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    }, node.title)));\n  }\n\n}\n\nexport default NodeItem; // const CustomPopover = props => {\n//     const { title, addChild, edit } = props;\n//     return (\n//         <Popover id=\"popover-basic\">\n//             <Popover.Content>\n//                 <div>{title}</div>\n//                 <button\n//                     onClick={() => addChild(\"ABC\")}\n//                     type=\"button\"\n//                     className=\"btn btn-outline-success\"\n//                     style={{ marginBottom: \"10px\" }}\n//                 >\n//                     Add child\n//                 </button>\n//                 <div>\n//                     <button onClick={edit} type=\"button\" className=\"btn btn-outline-primary\">\n//                         Edit\n//                     </button>\n//                 </div>\n//                 \n//             </Popover.Content>\n//         </Popover>\n//     );\n// };\n// CustomPopover({ ...node, addChild, edit })","map":{"version":3,"sources":["/Users/Vishal/Desktop/dentira/src/Component/NodeItem.js"],"names":["React","Component","Popover","OverlayTrigger","CustomPopover","caretRight","caretDown","NodeItem","state","clickedNode","popUp","setState","render","props","node","toggleExpansion","level","addChild","edit","icon","isExpanded","style","marginRight","textStyle","children","length","marginLeft","title"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,OAAP,MAAoB,yBAApB;AACA,OAAOC,cAAP,MAA2B,gCAA3B;AACA,OAAOC,aAAP,MAA0B,iBAA1B;AACA,OAAO,aAAP;AACA,OAAOC,UAAP,MAAuB,kCAAvB;AACA,OAAOC,SAAP,MAAsB,iCAAtB;;AAEA,MAAMC,QAAN,SAAuBN,SAAvB,CAAiC;AAAA;AAAA;AAAA,SAC7BO,KAD6B,GACrB;AACJC,MAAAA,WAAW,EAAE;AADT,KADqB;;AAAA,SAK7BC,KAL6B,GAKrB,MAAM;AACV,WAAKC,QAAL,CAAc;AACVF,QAAAA,WAAW,EAAE;AADH,OAAd;AAGH,KAT4B;AAAA;;AAW7BG,EAAAA,MAAM,GAAG;AAAA,wBACoD,KAAKC,KADzD;AAAA,UACGC,IADH,eACGA,IADH;AAAA,UACSC,eADT,eACSA,eADT;AAAA,UAC0BC,KAD1B,eAC0BA,KAD1B;AAAA,UACiCC,QADjC,eACiCA,QADjC;AAAA,UAC2CC,IAD3C,eAC2CA,IAD3C;AAEL,UAAMC,IAAI,GAAGL,IAAI,CAACM,UAAL,GAAkBd,SAAlB,GAA8BD,UAA3C;AACA,UAAMgB,KAAK,GAAGP,IAAI,CAACM,UAAL,GAAkB;AAAEE,MAAAA,WAAW,EAAE;AAAf,KAAlB,GAAwC,IAAtD;AACA,UAAMC,SAAS,GAAGT,IAAI,CAACU,QAAL,CAAcC,MAAd,GAAuB,CAAvB,GAA2B,IAA3B,GAAkC;AAAEC,MAAAA,UAAU,EAAE;AAAd,KAApD;AACA,WACI;AAAK,MAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACKV,KAAK,GAAG,CAAR,IAAa;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WADlB,EAEKF,IAAI,CAACU,QAAL,CAAcC,MAAd,GAAuB,CAAvB,IACG;AACI,MAAA,IAAI,MADR;AAEI,MAAA,OAAO,EAAEV,eAFb;AAGI,MAAA,KAAK,EAAEM,KAHX;AAII,MAAA,SAAS,EAAC,OAJd;AAKI,MAAA,GAAG,EAAEF,IALT;AAMI,MAAA,GAAG,EAAC,OANR;AAOI,MAAA,MAAM,EAAE,EAPZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHR,EAaI,oBAAC,cAAD;AAAgB,MAAA,OAAO,EAAC,OAAxB;AAAgC,MAAA,SAAS,EAAC,OAA1C;AAAkD,MAAA,OAAO,EAAE,oBAAC,aAAD;AAAe,QAAA,IAAI,EAAGL,IAAtB;AAA4B,QAAA,QAAQ,EAAEG,QAAtC;AAAgD,QAAA,IAAI,EAAEC,IAAtD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAA3D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAM,MAAA,KAAK,EAAEK,SAAb;AAAwB,MAAA,SAAS,EAAC,OAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACKT,IAAI,CAACa,KADV,CADJ,CAbJ,CADJ;AAqBH;;AArC4B;;AAwCjC,eAAepB,QAAf,C,CAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA","sourcesContent":["import React, { Component } from \"react\";\nimport Popover from \"react-bootstrap/Popover\";\nimport OverlayTrigger from \"react-bootstrap/OverlayTrigger\";\nimport CustomPopover from './CustomPopover';\nimport \"./index.css\";\nimport caretRight from \"../assets/images/caret-right.jpg\";\nimport caretDown from \"../assets/images/caret-down.png\";\n\nclass NodeItem extends Component {\n    state = {\n        clickedNode: false\n    };\n\n    popUp = () => {\n        this.setState({\n            clickedNode: true\n        });\n    };\n\n    render() {\n        const { node, toggleExpansion, level, addChild, edit } = this.props;\n        const icon = node.isExpanded ? caretDown : caretRight;\n        const style = node.isExpanded ? { marginRight: 13 } : null;\n        const textStyle = node.children.length > 0 ? null : { marginLeft: \"28px\" };\n        return (\n            <div className=\"node\">\n                {level > 0 && <span>|</span>}\n                {node.children.length > 0 && (\n                    <img\n                        hand\n                        onClick={toggleExpansion}\n                        style={style}\n                        className=\"caret\"\n                        src={icon}\n                        alt=\"caret\"\n                        height={14}\n                    ></img>\n                )}\n                <OverlayTrigger trigger=\"click\" placement=\"right\" overlay={<CustomPopover node ={node} addChild={addChild} edit={edit}/>}>\n                    <span style={textStyle} className=\"mx-10\">\n                        {node.title}\n                    </span>\n                </OverlayTrigger>\n            </div>\n        );\n    }\n}\n\nexport default NodeItem;\n\n// const CustomPopover = props => {\n//     const { title, addChild, edit } = props;\n//     return (\n//         <Popover id=\"popover-basic\">\n//             <Popover.Content>\n//                 <div>{title}</div>\n//                 <button\n//                     onClick={() => addChild(\"ABC\")}\n//                     type=\"button\"\n//                     className=\"btn btn-outline-success\"\n//                     style={{ marginBottom: \"10px\" }}\n//                 >\n//                     Add child\n//                 </button>\n//                 <div>\n//                     <button onClick={edit} type=\"button\" className=\"btn btn-outline-primary\">\n//                         Edit\n//                     </button>\n//                 </div>\n//                 â€©\n//             </Popover.Content>\n//         </Popover>\n//     );\n// };\n\n// CustomPopover({ ...node, addChild, edit })\n"]},"metadata":{},"sourceType":"module"}